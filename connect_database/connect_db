import sqlite3

conn = sqlite3.connect('student_attendance.db')
cursor = conn.cursor()

cursor.execute("PRAGMA foreign_keys = ON;")

# Bảng Sinh Viên
cursor.execute('''
CREATE TABLE IF NOT EXISTS Students (
    student_id INTEGER PRIMARY KEY AUTOINCREMENT,
    full_name TEXT,
    date_of_birth TEXT,
    gender TEXT,
    class_id INTEGER,
    email TEXT,
    phone_number TEXT,
    photo_path TEXT
);
''')

# Bảng Mặt Khuôn Mặt (Embeddings)
cursor.execute('''
CREATE TABLE IF NOT EXISTS Face_Embeddings (
    embedding_id INTEGER PRIMARY KEY AUTOINCREMENT,
    student_id INTEGER,
    embedding_vector BLOB,
    created_at TEXT,
    FOREIGN KEY (student_id) REFERENCES Students(student_id)
);
''')

# Bảng Điểm Danh
cursor.execute('''
CREATE TABLE IF NOT EXISTS Attendance (
    attendance_id INTEGER PRIMARY KEY AUTOINCREMENT,
    student_id INTEGER,
    status TEXT,
    created_at TEXT,
    FOREIGN KEY (student_id) REFERENCES Students(student_id)
);
''')

# Bảng Lịch Sử Ra Vào
cursor.execute('''
CREATE TABLE IF NOT EXISTS Attendance_History (
    history_id INTEGER PRIMARY KEY AUTOINCREMENT,
    student_id INTEGER,
    entry_time TEXT,
    exit_time TEXT,
    status TEXT,
    action_timestamp TEXT,
    action_type TEXT,
    FOREIGN KEY (student_id) REFERENCES Students(student_id)
);
''')

conn.commit()
conn.close()

print("OK!")


class DatabaseConnection:
    def __init__(self, db_name="student_attendance.db"):
        self.db_name = db_name
        self.connection = None
        self.cursor = None

    def connect(self):
        """Kết nối đến cơ sở dữ liệu."""
        try:
            self.connection = sqlite3.connect(self.db_name)
            self.cursor = self.connection.cursor()
            self.cursor.execute("PRAGMA foreign_keys = ON;")
            print(f"Connected to database: {self.db_name}")
        except sqlite3.Error as e:
            print(f"Error connecting to database: {e}")

    def create_tables(self):
        """Tạo các bảng trong cơ sở dữ liệu."""
        try:
            # Bảng Sinh Viên
            self.cursor.execute('''
                CREATE TABLE IF NOT EXISTS Students (
                    student_id INTEGER PRIMARY KEY AUTOINCREMENT,
                    full_name TEXT NOT NULL,
                    date_of_birth TEXT,
                    gender TEXT,
                    class_id INTEGER,
                    email TEXT,
                    phone_number TEXT,
                    photo_path TEXT
                );
            ''')

            # Bảng Mặt Khuôn Mặt (Embeddings)
            self.cursor.execute('''
                CREATE TABLE IF NOT EXISTS Face_Embeddings (
                    embedding_id INTEGER PRIMARY KEY AUTOINCREMENT,
                    student_id INTEGER,
                    embedding_vector BLOB,
                    created_at TEXT,
                    FOREIGN KEY (student_id) REFERENCES Students(student_id)
                );
            ''')

            # Bảng Điểm Danh
            self.cursor.execute('''
                CREATE TABLE IF NOT EXISTS Attendance (
                    attendance_id INTEGER PRIMARY KEY AUTOINCREMENT,
                    student_id INTEGER,
                    status TEXT,
                    created_at TEXT,
                    FOREIGN KEY (student_id) REFERENCES Students(student_id)
                );
            ''')

            # Bảng Lịch Sử Ra Vào
            self.cursor.execute('''
                CREATE TABLE IF NOT EXISTS Attendance_History (
                    history_id INTEGER PRIMARY KEY AUTOINCREMENT,
                    student_id INTEGER,
                    entry_time TEXT,
                    exit_time TEXT,
                    status TEXT,
                    action_timestamp TEXT,
                    action_type TEXT,
                    FOREIGN KEY (student_id) REFERENCES Students(student_id)
                );
            ''')

            self.connection.commit()
            print("All tables created successfully.")
        except sqlite3.Error as e:
            print(f"Error creating tables: {e}")

    def close(self):
        """Đóng kết nối đến cơ sở dữ liệu."""
        if self.connection:
            self.connection.close()
            print("Database connection closed.")


if __name__ == "__main__":
    # Tạo đối tượng kết nối
    db = DatabaseConnection()

    # Kết nối cơ sở dữ liệu và tạo bảng
    db.connect()
    db.create_tables()
    db.close()
